@model NaveedElectronicWeb.NEModel.Product

@{
    var list = ViewBag.CategoriesList as IEnumerable<NaveedElectronicWeb.NEModel.Category>;
} 
<br />
@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
 
           
        <div class="row">


            <div class="form-group">
                @Html.LabelFor(model => model.CategoryId, "Category", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model.CategoryId, new SelectList(list, "Id", "CategoryName"), "Select Category", htmlAttributes: new { @class = "form-control", placeholder = "Select Category" })
                    @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                </div>

              
            </div>

            <div class="form-group">

                @Html.LabelFor(model => model.Model, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">

                    @Html.EditorFor(model => model.Model, new { htmlAttributes = new { @class = "form-control", placeholder = "Model" } })
                    @Html.ValidationMessageFor(model => model.Model, "", new { @class = "text-danger" })

                </div>

                @Html.LabelFor(model => model.SalePrice, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.SalePrice, new { htmlAttributes = new { @class = "form-control", placeholder = "Sale Price" } })
                    @Html.ValidationMessageFor(model => model.SalePrice, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.GuaranteeWarranty, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.GuaranteeWarranty, new { htmlAttributes = new { @class = "form-control", placeholder = "Guarantee/Warantee" } })
                    <small>
                        <a href="#" id="GWUrdu">
                            جوگارنٹی کارڈ میں ہے وہی گارنٹی ہے

                        </a>
                    </small>
                    <br />
                    @Html.ValidationMessageFor(model => model.GuaranteeWarranty, "", new { @class = "text-danger" })
                </div>

                @Html.LabelFor(model => model.PurchasePrice, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.PurchasePrice, new { htmlAttributes = new { @class = "form-control", placeholder = "Purchase Price" } })
                    @Html.ValidationMessageFor(model => model.PurchasePrice, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">


                @Html.LabelFor(model => model.InstallmentRatio, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.InstallmentRatio, new { htmlAttributes = new { @class = "form-control", placeholder = "Installment Ratio" } })
                    <div>
                        <small> <a href="#" id="InstallmentRatioPlus"><span class="glyphicon glyphicon-plus"></span></a> </small>
                        <small> <a href="#" id="InstallmentRatioMinus"><span class="glyphicon glyphicon-minus"></span></a> </small>
                        &nbsp; &nbsp;
                        <strong id="InstallmentDispay"></strong>
                    </div>
                    @Html.ValidationMessageFor(model => model.InstallmentRatio, "", new { @class = "text-danger" })

                </div>

                @Html.LabelFor(model => model.FirstPaymentRatio, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.FirstPaymentRatio, new { htmlAttributes = new { @class = "form-control", placeholder = "First Payment Ratio" } })
                    <div>
                        <small> <a href="#" id="PaymentRatioPlus"><span class="glyphicon glyphicon-plus"></span></a> </small>
                        <small> <a href="#" id="PaymentRatioMinus"><span class="glyphicon glyphicon-minus"></span></a> </small>
                        &nbsp; &nbsp;
                        <strong id="PaymentDisplay"></strong>
                    </div>
                    @Html.ValidationMessageFor(model => model.FirstPaymentRatio, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">


                @Html.LabelFor(model => model.NoOfMonths, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.NoOfMonths, new { htmlAttributes = new { @class = "form-control", placeholder = "Number of Months" } })
                    @Html.ValidationMessageFor(model => model.NoOfMonths, "", new { @class = "text-danger" })
                </div>

                @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control", placeholder = "Quantity" } })
                    @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">


                <div class="col-md-offset-2 col-md-4">
                    <input type="submit" value="Add" class="btn btn-info" />
                </div>
            </div>
        </div>
    </div>
}

<br />
<div>
   <ol class="breadcrumb">
       <li class="active"><strong>@Html.ActionLink("Back to List", "Index")</strong></li>
   </ol>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

<script>
        //GuaranteeWarranty,InstallmentRatio,FirstPaymentRatio

        function InstallmentIncreament() {

            var ratio = parseFloat($("#InstallmentRatio").val());


            ratio = ratio + 0.05;
            if (ratio > 1)
                ratio = 0;

            if (ratio < 0)
                ratio = 1;

            ratio = ratio.toFixed(2);
            var displytext = (ratio * 100).toFixed(0).toString() + "%";
            $("#InstallmentRatio").val(ratio);
            $("#InstallmentDispay").text(displytext);
        }

        function InstallmentDecrement() {


            var ratio = parseFloat($("#InstallmentRatio").val());


            ratio = ratio - 0.05;

            if (ratio > 1)
                ratio = 0;

            if (ratio < 0)
                ratio = 1;
            ratio = ratio.toFixed(2);

            var displytext = (ratio * 100).toFixed(0).toString() + "%";
            $("#InstallmentRatio").val(ratio);
            $("#InstallmentDispay").text(displytext);
        }

        function PaymentIncrement() {
            var ratio = parseFloat($("#FirstPaymentRatio").val());


            ratio = ratio + 0.05;
            if (ratio > 1)
                ratio = 0;

            if (ratio < 0)
                ratio = 1;


            ratio = ratio.toFixed(2);
            var displytext = (ratio * 100).toFixed(0).toString() + "%";
            $("#FirstPaymentRatio").val(ratio);
            $("#PaymentDisplay").text(displytext);
        }

        function PaymentDecrement() {
            var ratio = parseFloat($("#FirstPaymentRatio").val());

            ratio = ratio - 0.05;
            if (ratio < 0)
                ratio = 1;

            if (ratio > 1)
                ratio = 0;

            ratio = ratio.toFixed(2);

            var displytext = (ratio * 100).toFixed(0).toString() + "%";
            $("#FirstPaymentRatio").val(ratio);
            $("#PaymentDisplay").text(displytext);
        }

        function PaymentChanged() {
            var ratio = parseFloat($("#FirstPaymentRatio").val());
            var displytext = (ratio * 100).toFixed(0).toString() + "%";
            $("#PaymentDisplay").text(displytext);
        }
        function InstallmentChanged() {

             

            var ratio =  parseFloat($("#InstallmentRatio").val());
            var displytext = (ratio * 100).toFixed(0).toString() + "%";
            $("#InstallmentDispay").text(displytext);

        }


        $(window).load(function () {

            $("#FirstPaymentRatio").val(0.35);
            $("#InstallmentRatio").val(0.25)
            InstallmentChanged();
            PaymentChanged();
        });

        $("#GWUrdu").click(function () {

            $("#GuaranteeWarranty").val("جو گارنٹی کارڈ میں ہے وہی گارنٹی ہے");

        });

        $("#InstallmentRatioPlus").click(function () {

            InstallmentIncreament();
        });

        $("#InstallmentRatioMinus").click(function () {
            InstallmentDecrement();
        });

        $("#PaymentRatioPlus").click(function () {

            PaymentIncrement();

        });

        $("#PaymentRatioMinus").click(function () {

            PaymentDecrement();
        });

        $("#InstallmentRatio").change(function () {

            InstallmentChanged();

        });
        $("#FirstPaymentRatio").change(function () {

            PaymentChanged();
        });
</script>
}
